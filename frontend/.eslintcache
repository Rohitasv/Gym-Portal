[{"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/App.js":"1","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/homeView.jsx":"2","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/attendanceView.jsx":"3","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/userEditView.jsx":"4","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/Authentication Screens/LoginView.jsx":"5","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/actions/studentActions.jsx":"6","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/student.jsx":"7","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/actions/attendanceActions.jsx":"8","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/actions/userActions.jsx":"9","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/constants/studentConstant.jsx":"10","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/attendanceTableComponent.jsx":"11","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/studentDetailsView.jsx":"12","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/addStudentView.jsx":"13","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/footer.jsx":"14","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/header.jsx":"15","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/reportWebVitals.js":"16","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/userListView.jsx":"17","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/Authentication Screens/RegisterView.jsx":"18","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/reducers/studentsReducer.jsx":"19","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/attendanceTable.jsx":"20","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/constants/userConstants.jsx":"21","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/analysisComponent.jsx":"22","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/analysisView.jsx":"23","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/reducers/userReducers.jsx":"24","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/formContainer.jsx":"25","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/paginate.jsx":"26","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/searchBox.jsx":"27","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/store.jsx":"28","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/reducers/attendanceReducer.jsx":"29","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/profileView.jsx":"30","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/studentTableView.jsx":"31"},{"size":2000,"mtime":1612543842000,"results":"32","hashOfConfig":"33"},{"size":2760,"mtime":1612543842000,"results":"34","hashOfConfig":"33"},{"size":1118,"mtime":1683664610539,"results":"35","hashOfConfig":"33"},{"size":3182,"mtime":1612543842000,"results":"36","hashOfConfig":"33"},{"size":2146,"mtime":1612543842000,"results":"37","hashOfConfig":"33"},{"size":4652,"mtime":1612543842000,"results":"38","hashOfConfig":"33"},{"size":862,"mtime":1683664340324,"results":"39","hashOfConfig":"33"},{"size":2462,"mtime":1612543842000,"results":"40","hashOfConfig":"33"},{"size":6463,"mtime":1612543842000,"results":"41","hashOfConfig":"33"},{"size":1297,"mtime":1612543842000,"results":"42","hashOfConfig":"33"},{"size":3367,"mtime":1683777695167,"results":"43","hashOfConfig":"33"},{"size":5742,"mtime":1683666802565,"results":"44","hashOfConfig":"33"},{"size":7155,"mtime":1683666321008,"results":"45","hashOfConfig":"33"},{"size":279,"mtime":1683667810690,"results":"46","hashOfConfig":"33"},{"size":2549,"mtime":1683667282594,"results":"47","hashOfConfig":"33"},{"size":362,"mtime":1612543842000,"results":"48","hashOfConfig":"33"},{"size":2730,"mtime":1612543842000,"results":"49","hashOfConfig":"33"},{"size":3149,"mtime":1612543842000,"results":"50","hashOfConfig":"33"},{"size":3180,"mtime":1612543842000,"results":"51","hashOfConfig":"33"},{"size":2087,"mtime":1683667707826,"results":"52","hashOfConfig":"33"},{"size":1502,"mtime":1612543842000,"results":"53","hashOfConfig":"33"},{"size":2641,"mtime":1612543842000,"results":"54","hashOfConfig":"33"},{"size":3734,"mtime":1612543842000,"results":"55","hashOfConfig":"33"},{"size":3520,"mtime":1612543842000,"results":"56","hashOfConfig":"33"},{"size":331,"mtime":1612543842000,"results":"57","hashOfConfig":"33"},{"size":743,"mtime":1612543842000,"results":"58","hashOfConfig":"33"},{"size":783,"mtime":1612543842000,"results":"59","hashOfConfig":"33"},{"size":1760,"mtime":1612543842000,"results":"60","hashOfConfig":"33"},{"size":1789,"mtime":1612543842000,"results":"61","hashOfConfig":"33"},{"size":3635,"mtime":1612543842000,"results":"62","hashOfConfig":"33"},{"size":2402,"mtime":1612543842000,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"oh576n",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"128"},"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/App.js",[],["140","141"],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/homeView.jsx",["142"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Student from \"../components/student\";\nimport Loading from \"../components/loader.jsx\";\nimport Message from \"../components/message.jsx\";\nimport { listStudents } from \"../actions/studentActions\";\nimport Paginate from \"../components/paginate\";\nimport {\n  Row,\n  Col,\n  ButtonGroup,\n  ToggleButton,\n  Container,\n} from \"react-bootstrap\";\nimport StudentsTableView from \"./studentTableView\";\n\nconst HomeView = ({ match, history }) => {\n  const [isGrid, setIsGrid] = useState(true);\n  const keyword = match.params.keyword;\n\n  const pageNumber = match.params.pageNumber || 1;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading: userLoading, userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const studentsList = useSelector((state) => state.studentsList);\n  const { loading, error, students, page, pages } = studentsList;\n\n  useEffect(() => {\n    if (!userLoading && !userInfo) {\n      history.push(\"/login\");\n    }\n    dispatch(listStudents(keyword, pageNumber));\n  }, [keyword, pageNumber]);\n\n  return (\n    <>\n      <>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col xs lg=\"2\"></Col>\n            <Col md=\"auto\">\n              <ButtonGroup toggle>\n                {[\"Grid\", \"Table\"].map((type) => (\n                  <ToggleButton\n                    key={type}\n                    type=\"radio\"\n                    variant=\"secondary\"\n                    name=\"radio\"\n                    value={type}\n                    checked={(isGrid ? \"Grid\" : \"Table\") === type}\n                    onChange={(e) =>\n                      setIsGrid(e.target.value === \"Grid\" ? true : false)\n                    }\n                  >\n                    {type === \"Grid\" ? <> Grid</> : <> Table </>}\n                  </ToggleButton>\n                ))}\n              </ButtonGroup>\n            </Col>\n            <Col xs lg=\"2\"></Col>\n          </Row>\n        </Container>\n      </>\n\n      <h1>Students</h1>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : isGrid ? (\n        <>\n          <Row>\n            {students.map((student) => (\n              <Col key={student._id} sm={12} md={6} lg={4} xl={3}>\n                <Student stuentDetails={student} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      ) : (\n        <>\n          <StudentsTableView keyword={keyword} pageNumber={pageNumber} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeView;\n","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/attendanceView.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/userEditView.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/Authentication Screens/LoginView.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/actions/studentActions.jsx",[],["143","144"],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/student.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/actions/attendanceActions.jsx",[],["145","146"],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/actions/userActions.jsx",[],["147","148"],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/constants/studentConstant.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/attendanceTableComponent.jsx",["149"],"import React, { useEffect } from \"react\";\nimport { Table, Form, Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { postAttendance } from \"../actions/attendanceActions\";\nimport { Link } from \"react-router-dom\";\nconst AttendanceTableComponent = ({\n  students,\n  attendanceMap,\n  setAttendanceMap,\n  attendance,\n  roomNo,\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {}, [dispatch, attendanceMap]);\n  const updateAttendance = () => {\n    if (attendance) {\n      if (!attendance.roomNo.includes(roomNo)) {\n        attendance.roomNo.push(roomNo);\n      }\n    }\n    const roomData = attendance ? attendance.roomNo : roomNo;\n    const dataData = attendanceMap;\n    const detailsData = attendance ? attendance.details : {};\n    students.map((student) => {\n      detailsData[student._id] = {\n        name: student.name,\n        contact: student.contact,\n        roomNo: student.roomNo,\n      };\n    });\n\n    dispatch(\n      postAttendance({\n        roomNo: roomData,\n        details: detailsData,\n        data: dataData,\n      })\n    );\n  };\n  return (\n    <>\n      <Table striped bordered hover responsive className=\"table-sm\">\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>Attendance</th>\n            <th>STATUS</th>\n            <th>CONTACT</th>\n            <th>CITY</th>\n          </tr>\n        </thead>\n        <tbody>\n          {students &&\n            students.map((student) => (\n              <>\n                <tr key={student._id}>\n                  <td>\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\n                  </td>\n                  <td>\n                    <Form>\n                      <Form.Group controlId=\"status\">\n                        <Form.Control\n                          as=\"select\"\n                          size=\"sm\"\n                          defaultValue={attendanceMap[student._id]}\n                          onChange={(e) => {\n                            var tempMap = attendanceMap;\n                            tempMap[student._id] = e.target.value;\n                            setAttendanceMap(tempMap);\n                          }}\n                        >\n                          <option>Gym</option>\n                          {/* <option>Home</option> */}\n                          <option>outside </option>\n                        </Form.Control>\n                      </Form.Group>\n                    </Form>\n                  </td>\n                  <td>\n                    <span\n                      style={{\n                        color:\n                          student.status === \"Outside\"\n                            ? \"red\"\n                            : student.status === \"Home\"\n                            ? \"blue\"\n                            : \"black\",\n                      }}\n                    >\n                      {student.status}\n                    </span>\n                  </td>\n                  <td>\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\n                  </td>\n                  <td>{student.city}</td>\n                </tr>\n              </>\n            ))}\n        </tbody>\n      </Table>\n      <Button variant=\"success\" onClick={updateAttendance}>\n        Update Attendance\n      </Button>\n    </>\n  );\n};\n\nexport default AttendanceTableComponent;\n","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/studentDetailsView.jsx",["150"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Loading from \"../components/loader\";\nimport Message from \"../components/message\";\nimport {\n  getStudentDetails,\n  updateStudent,\n  deleteStudent,\n} from \"../actions/studentActions\";\nimport { STUDENT_UPDATE_RESET } from \"../constants/studentConstant\";\nconst StudentDetailsView = ({ match, history }) => {\n  const [status, setStatus] = useState(\"\");\n  const dispatch = useDispatch();\n  const studentDetails = useSelector((state) => state.studentDetails);\n  const { loading, error, student } = studentDetails;\n  const studentUpdate = useSelector((state) => state.studentUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = studentUpdate;\n  const studentDelete = useSelector((state) => state.studentDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = studentDelete;\n\n  useEffect(() => {\n    if (successDelete) {\n      history.push(\"/\");\n    }\n    if (successUpdate) {\n      dispatch({ type: STUDENT_UPDATE_RESET });\n    }\n    if (!student || !student._id || student._id !== match.params.id) {\n      dispatch(getStudentDetails(match.params.id));\n    }\n    if (student && student._id && !status) {\n      setStatus(student.status);\n    }\n  }, [dispatch, match, successUpdate, successDelete]);\n\n  const navigateToEdit = () => {\n    history.push({\n      pathname: `/student/edit/${student._id}`,\n      state: { studentProps: student },\n    });\n  };\n  const updateStatus = () => {\n    student.status = status;\n    dispatch(updateStudent(student));\n  };\n\n  const deleteStuden = () => {\n    if (window.confirm(\"Are you sure\")) {\n      dispatch(deleteStudent(student._id));\n    }\n  };\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading || loadingUpdate || loadingDelete ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n          {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n          {student && (\n            <Row>\n              <Col md={3}>\n                <Image src={student.image} alt={student.name} fluid />\n              </Col>\n              <Col md={3}>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <h3>{student.name}</h3>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <span>Phone No:{student.contact}</span>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <span>Father Contact:{student.fatherContact}</span>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <span>City:{student.city}</span>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <span>Address:{student.address}</span>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n              <Col md={4}>\n                <Card>\n                  <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Entry No</Col>\n                        <Col> {student.roomNo}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Block No:</Col>\n                        <Col> {student.blockNo}</Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Status:</Col>\n                        <Col>\n                          <Form.Control\n                            size=\"sm\"\n                            as=\"select\"\n                            value={status}\n                            onChange={(e) => setStatus(e.target.value)}\n                          >\n                            {[\"Gym\", \"Outside Gym\"].map((x) => (\n                              <option key={x} value={x}>\n                                {x}\n                              </option>\n                            ))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Button\n                        className=\"btn-block\"\n                        type=\"button\"\n                        onClick={updateStatus}\n                      >\n                        Update\n                      </Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n              <Col>\n                <ListGroup variant=\"flush\">\n                  <Row>\n                    <ListGroup.Item variant=\"secondary\">\n                      <Button onClick={navigateToEdit}>\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Button variant=\"danger\" onClick={deleteStuden}>\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </ListGroup.Item>\n                  </Row>\n                </ListGroup>\n              </Col>\n            </Row>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StudentDetailsView;\n","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/addStudentView.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/footer.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/header.jsx",[],["151","152"],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/reportWebVitals.js",[],["153","154"],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/userListView.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/Authentication Screens/RegisterView.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/reducers/studentsReducer.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/attendanceTable.jsx",["155","156","157"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loading from \"./loader\";\nimport Message from \"./message\";\nimport AttendanceTableComponent from \"./attendanceTableComponent\";\n\nconst AttendanceTable = ({ roomNo }) => {\n  const dispatch = useDispatch();\n  const [attendanceMap, setAttendanceMap] = useState({});\n\n  const getStudentsByRoomNo = useSelector((state) => state.getStudentsByRoomNo);\n  const { loading, error, students, attendance } = getStudentsByRoomNo;\n  const attendanceDataEnter = useSelector((state) => state.attendanceDataEnter);\n  const {\n    loading: loadingAttendance,\n    error: errorAttendance,\n  } = attendanceDataEnter;\n  useEffect(() => {\n    if (students) {\n      arrangeTable();\n    }\n  }, [dispatch, attendance, attendanceMap, students]);\n\n  const arrangeTable = () => {\n    if (attendance) {\n      var tempMap = attendanceMap;\n      students.map((student) => {\n        if (attendance.data[student._id]) {\n          tempMap[student._id] = attendance.data[student._id];\n        } else {\n          tempMap[student._id] = \"Gym\";\n        }\n      });\n      setAttendanceMap(attendanceMap);\n    } else {\n      students.map((student) => {\n        var temp = attendanceMap;\n        temp[student._id] = \"Outside Gym\";\n        setAttendanceMap(temp);\n      });\n    }\n    var temp = attendanceMap;\n    setAttendanceMap(temp);\n  };\n\n  return (\n    <>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading || loadingAttendance ? (\n        <Loading />\n      ) : (\n        <>\n          {errorAttendance && (\n            <Message variant=\"danger\">{errorAttendance}</Message>\n          )}\n          {students && (\n            <>\n              <AttendanceTableComponent\n                students={students}\n                attendanceMap={attendanceMap}\n                setAttendanceMap={setAttendanceMap}\n                attendance={attendance}\n                roomNo={roomNo}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AttendanceTable;\n","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/constants/userConstants.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/analysisComponent.jsx",["158"],"import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"./loader\";\nimport Message from \"./message\";\nimport { CSVLink } from \"react-csv\";\n\nconst AnalysisComponent = () => {\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\n  const { loading, error, attendance } = attendanceAnalysis;\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  useEffect(() => {\n    if (attendance) {\n      setHeaders([\n        { label: \"Name\", key: \"name\" },\n        { label: \"Contact\", key: \"contact\" },\n        { label: \"Room No\", key: \"roomNo\" },\n        { label: \"Status\", key: \"attendance\" },\n      ]);\n      var csvMapList = [];\n      Object.entries(attendance.details).map((student) => {\n        var csvMap = {};\n        csvMap[\"name\"] = student[1].name;\n        csvMap[\"contact\"] = student[1].contact;\n        csvMap[\"roomNo\"] = student[1].roomNo;\n        csvMap[\"attendance\"] = attendance.data[student[0]];\n        csvMapList.push(csvMap);\n      });\n\n      setData(csvMapList);\n    }\n  }, [attendance]);\n  return (\n    <>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          {attendance && (\n            <>\n              <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Contact No</th>\n                    <th>Room No</th>\n                    <th>Attendance</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {attendance &&\n                    Object.entries(attendance.details).map((student) => {\n                      return (\n                        <tr key={student[0]}>\n                          <th>{student[1].name}</th>\n                          <td>{student[1].contact}</td>\n                          <td>{student[1].roomNo}</td>\n                          <td>{attendance.data[student[0]]}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </Table>\n              <CSVLink\n                data={data}\n                headers={headers}\n                filename={`attendance_${Date()\n                  .toString()\n                  .substring(0, 15)}.csv`}\n                className=\"btn btn-primary\"\n              >\n                Download\n              </CSVLink>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AnalysisComponent;\n","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/analysisView.jsx",["159","160"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {\n  deleteAttendanceByDate,\n  getAnalysisByDate,\n} from \"../actions/attendanceActions\";\nimport AnalysisComponent from \"../components/analysisComponent\";\nimport Loading from \"../components/loader\";\nimport Message from \"../components/message\";\n\nconst AnalysisView = () => {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const [days, setDays] = useState(0);\n  const [idList, setIdList] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\n  const { attendance } = attendanceAnalysis;\n  const attendanceDelete = useSelector((state) => state.attendanceDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete,\n  } = attendanceDelete;\n  useEffect(() => {\n    if (attendance) {\n      var temp = idList;\n      Object.entries(attendance.details).map((at) => {\n        temp.push(at[0]);\n      });\n\n      setIdList(temp);\n    } else {\n      dispatch(getAnalysisByDate(startDate.toString().substring(0, 15)));\n    }\n  }, [attendance, dispatch]);\n\n  const changeDate = (date) => {\n    dispatch(getAnalysisByDate(date.toString().substring(0, 15)));\n    setStartDate(date);\n  };\n  const showModal = () => {\n    setModal(true);\n  };\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  const startDelete = () => {\n    setModal(false);\n    dispatch(deleteAttendanceByDate(days));\n  };\n\n  return (\n    <>\n      <Row className=\"flex justify-content-between\">\n        <Link to=\"/\" className=\"btn btn-light my-3\">\n          Go Back\n        </Link>\n        <div style={{ height: \"40px\", display: \"flex\" }}>\n          <Button variant=\"outline-danger\" size=\"sm\" onClick={showModal}>\n            Delete Attendance\n          </Button>\n        </div>\n      </Row>\n      {loadingDelete && <Loading />}\n      {errorDelete && <Message variant=\"success\">{errorDelete}</Message>}\n      {successDelete && <Message variant=\"success\">Attendance Deleted</Message>}\n\n      <Col>\n        <Row>\n          <Col>\n            <Row>Analysis for </Row>\n            <strong>\n              {startDate.toISOString().toString().substring(0, 10)}\n            </strong>\n          </Col>\n          <Col>\n            <DatePicker\n              selected={startDate}\n              onChange={(date) => changeDate(date)}\n            />\n          </Col>\n        </Row>\n        <Modal show={modal} animation={true} onHide={closeModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Enter Number of days before to delete</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"days\">\n                <Form.Label>Enter no of days</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Enter days\"\n                  value={days}\n                  onChange={(e) => setDays(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={closeModal}>\n              Close\n            </Button>\n            <Button variant=\"outline-danger\" onClick={startDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {<AnalysisComponent />}\n      </Col>\n    </>\n  );\n};\n\nexport default AnalysisView;\n","/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/reducers/userReducers.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/formContainer.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/paginate.jsx",[],["161","162"],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/components/searchBox.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/store.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/reducers/attendanceReducer.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/profileView.jsx",[],"/home/vaibhav/Desktop/Hostel-Management-master/frontend/src/screens/studentTableView.jsx",["163"],"import React, { useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport Paginate from \"../components/paginate\";\nimport { listStudents } from \"../actions/studentActions\";\nimport { Link } from \"react-router-dom\";\n\nconst StudentsTableView = ({ keyword, pageNumber }) => {\n  const dispatch = useDispatch();\n\n  const studentsList = useSelector((state) => state.studentsList);\n  const { loading, error, students, page, pages } = studentsList;\n  useEffect(() => {\n    if (!students) {\n      dispatch(listStudents(keyword, pageNumber));\n    }\n  }, [dispatch, keyword, pageNumber]);\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>Stream</th>\n                <th>NAME</th>\n                <th>STATUS</th>\n                <th>CONTACT</th>\n                <th>ROOM NO</th>\n                <th>CITY</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student) => (\n                <tr key={student._id}>\n                  <td>{student.category}</td>\n                  <td>\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\n                  </td>\n                  <td>\n                    <span\n                      style={{\n                        color:\n                          student.status === \"Outside\"\n                            ? \"red\"\n                            : student.status === \"Home\"\n                            ? \"blue\"\n                            : \"black\",\n                      }}\n                    >\n                      {student.status}\n                    </span>\n                  </td>\n                  <td>\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\n                  </td>\n                  <td>{student.roomNo}</td>\n                  <td>{student.city}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StudentsTableView;\n",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":35,"column":6,"nodeType":"170","endLine":35,"endColumn":27,"suggestions":"171"},{"ruleId":"164","replacedBy":"172"},{"ruleId":"166","replacedBy":"173"},{"ruleId":"164","replacedBy":"174"},{"ruleId":"166","replacedBy":"175"},{"ruleId":"164","replacedBy":"176"},{"ruleId":"166","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":24,"column":28,"nodeType":"180","messageId":"181","endLine":24,"endColumn":30},{"ruleId":"168","severity":1,"message":"182","line":52,"column":6,"nodeType":"170","endLine":52,"endColumn":53,"suggestions":"183"},{"ruleId":"164","replacedBy":"184"},{"ruleId":"166","replacedBy":"185"},{"ruleId":"164","replacedBy":"186"},{"ruleId":"166","replacedBy":"187"},{"ruleId":"168","severity":1,"message":"188","line":22,"column":6,"nodeType":"170","endLine":22,"endColumn":53,"suggestions":"189"},{"ruleId":"178","severity":1,"message":"179","line":27,"column":30,"nodeType":"180","messageId":"181","endLine":27,"endColumn":32},{"ruleId":"178","severity":1,"message":"179","line":36,"column":30,"nodeType":"180","messageId":"181","endLine":36,"endColumn":32},{"ruleId":"178","severity":1,"message":"179","line":22,"column":56,"nodeType":"180","messageId":"181","endLine":22,"endColumn":58},{"ruleId":"178","severity":1,"message":"179","line":32,"column":51,"nodeType":"180","messageId":"181","endLine":32,"endColumn":53},{"ruleId":"168","severity":1,"message":"190","line":40,"column":6,"nodeType":"170","endLine":40,"endColumn":28,"suggestions":"191"},{"ruleId":"164","replacedBy":"192"},{"ruleId":"166","replacedBy":"193"},{"ruleId":"168","severity":1,"message":"194","line":19,"column":6,"nodeType":"170","endLine":19,"endColumn":37,"suggestions":"195"},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'userInfo', and 'userLoading'. Either include them or remove the dependency array.","ArrayExpression",["198"],["196"],["197"],["196"],["197"],["196"],["197"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'history', 'status', and 'student'. Either include them or remove the dependency array.",["199"],["196"],["197"],["196"],["197"],"React Hook useEffect has a missing dependency: 'arrangeTable'. Either include it or remove the dependency array.",["200"],"React Hook useEffect has missing dependencies: 'idList' and 'startDate'. Either include them or remove the dependency array.",["201"],["196"],["197"],"React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["202"],"no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [dispatch, history, keyword, pageNumber, userInfo, userLoading]",{"range":"213","text":"214"},"Update the dependencies array to be: [dispatch, match, successUpdate, successDelete, student, status, history]",{"range":"215","text":"216"},"Update the dependencies array to be: [dispatch, attendance, attendanceMap, students, arrangeTable]",{"range":"217","text":"218"},"Update the dependencies array to be: [attendance, dispatch, idList, startDate]",{"range":"219","text":"220"},"Update the dependencies array to be: [dispatch, keyword, pageNumber, students]",{"range":"221","text":"222"},[1116,1137],"[dispatch, history, keyword, pageNumber, userInfo, userLoading]",[1494,1541],"[dispatch, match, successUpdate, successDelete, student, status, history]",[780,827],"[dispatch, attendance, attendanceMap, students, arrangeTable]",[1402,1424],"[attendance, dispatch, idList, startDate]",[702,733],"[dispatch, keyword, pageNumber, students]"]